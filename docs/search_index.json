[["index.html", "Proyecto final RNA-seq Chapter 1 Proyecto", " Proyecto final RNA-seq Salvador González Juárez 2021-03-01 Chapter 1 Proyecto Universidad Nacional Autónoma de México - Licenciatura en ciencias genómicas Bioinformática y Estadística 2 2021 - Análisis de datos de secuenciación masiva (Dr. Leonardo Collado) Salvador González Juárez "],["especificaciones.html", "Chapter 2 Especificaciones:", " Chapter 2 Especificaciones: Con datos de algún estudio disponible vía recount3, hagan un análisis de expresión diferencial. Incluyan al menos 3 gráficas en su reporte. Su reporte debe ser público y estar listado en el Google Sheet del curso. "],["proyecto-escogido.html", "Chapter 3 Proyecto escogido:", " Chapter 3 Proyecto escogido: Firmas transcripcionales específicas del sexo en la depresión humana - SRP115956 Marco teórico: El trastorno depresivo mayor (MDD por sus siglas en inglés) es una enfermedad debilitante crónica que afecta cada año a 350 millones de personas en todo el mundo, lo que genera importantes cargas económicas y médicas en las sociedades. Si bien afecta tanto a hombres como a mujeres, el MDD se caracteriza por un fuerte dimorfismo sexual: las mujeres tienen 2-3 veces más probabilidades de desarrollar MDD, y presentan síntomas de mayor gravedad, mayor deterioro funcional, síntomas depresivos más atípicos y tasas más altas de ansiedad comórbida. Además, los hombres y las mujeres con MDD responden de manera diferente al tratamiento con antidepresivos. Sin embargo, los mecanismos moleculares que subyacen a este dimorfismo sexual siguen siendo en gran parte desconocidos. Métodos: Combinando la expresión diferencial y los análisis de redes de coexpresión de genes, los investigadores proporcionaron una caracterización completa de los perfiles transcripcionales masculinos y femeninos asociados con el MDD en 6 regiones del cerebro. Resultados: Los resultados que presentaron los autores del estudio muestran una reordenación importante de los patrones de transcripción en el MDD, con una superposición limitada entre hombres y mujeres, el cual es un efecto observado en humanos deprimidos. Identificaron reguladores clave de las redes de genes específicos del sexo que subyacen al MDD y confirmaron su impacto específico del sexo como mediadores de la susceptibilidad al estrés. Por ejemplo, la regulación a la baja del gen hub específico de la mujer DUSP6 en la corteza prefrontal (CPF) imita la susceptibilidad al estrés en las mujeres solo al aumentar la señalización ERK y la excitabilidad de las neuronas piramidales. Tal regulación a la baja de DUSP6 también recapitula la remodelación transcripcional que ocurre en la CPF de mujeres deprimidas. Conclusiones: Estos hallazgos revelan un dimorfismo sexual dramático a nivel transcripcional en el MDD y resaltan la importancia de estudiar tratamientos específicos por sexo para este trastorno. Diseño general: Datos de secuenciación de ARN de 6 regiones cerebrales post mortem humanas en hombres y mujeres con y sin depresión mayor. "],["datos-de-srp115956.html", "Chapter 4 Datos de SRP115956", " Chapter 4 Datos de SRP115956 Voy a usar datos de 10.1038/nm.4386 procesados con recount3. Por lo tanto, descargo los datos con los siguientes comandos: # Cargar el paquete de recount3 library(&quot;recount3&quot;) ## Loading required package: SummarizedExperiment ## Loading required package: MatrixGenerics ## Loading required package: matrixStats ## ## Attaching package: &#39;MatrixGenerics&#39; ## The following objects are masked from &#39;package:matrixStats&#39;: ## ## colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, ## colCounts, colCummaxs, colCummins, colCumprods, colCumsums, ## colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, ## colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, ## colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, ## colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, ## colWeightedMeans, colWeightedMedians, colWeightedSds, ## colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, ## rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, ## rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, ## rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, ## rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, ## rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, ## rowWeightedMads, rowWeightedMeans, rowWeightedMedians, ## rowWeightedSds, rowWeightedVars ## Loading required package: GenomicRanges ## Loading required package: stats4 ## Loading required package: BiocGenerics ## Loading required package: parallel ## ## Attaching package: &#39;BiocGenerics&#39; ## The following objects are masked from &#39;package:parallel&#39;: ## ## clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, ## clusterExport, clusterMap, parApply, parCapply, parLapply, ## parLapplyLB, parRapply, parSapply, parSapplyLB ## The following objects are masked from &#39;package:stats&#39;: ## ## IQR, mad, sd, var, xtabs ## The following objects are masked from &#39;package:base&#39;: ## ## anyDuplicated, append, as.data.frame, basename, cbind, colnames, ## dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, ## grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget, ## order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, ## rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, ## union, unique, unsplit, which.max, which.min ## Loading required package: S4Vectors ## ## Attaching package: &#39;S4Vectors&#39; ## The following object is masked from &#39;package:base&#39;: ## ## expand.grid ## Loading required package: IRanges ## Loading required package: GenomeInfoDb ## Loading required package: Biobase ## Welcome to Bioconductor ## ## Vignettes contain introductory material; view with ## &#39;browseVignettes()&#39;. To cite Bioconductor, see ## &#39;citation(&quot;Biobase&quot;)&#39;, and for packages &#39;citation(&quot;pkgname&quot;)&#39;. ## ## Attaching package: &#39;Biobase&#39; ## The following object is masked from &#39;package:MatrixGenerics&#39;: ## ## rowMedians ## The following objects are masked from &#39;package:matrixStats&#39;: ## ## anyMissing, rowMedians # Encontrar el proyecto de interes proj_info &lt;- subset(available_projects(), project == &quot;SRP115956&quot; &amp; project_type == &quot;data_sources&quot;) ## 2021-03-01 00:25:53 caching file sra.recount_project.MD.gz. ## 2021-03-01 00:25:54 caching file gtex.recount_project.MD.gz. ## 2021-03-01 00:25:56 caching file tcga.recount_project.MD.gz. # Crear un objetio de tipo RangedSummarizedExperiment (RSE) con la informacion a nivel de genes rse_gene &lt;- create_rse(proj_info) ## 2021-03-01 00:26:05 downloading and reading the metadata. ## 2021-03-01 00:26:07 caching file sra.sra.SRP115956.MD.gz. ## 2021-03-01 00:26:08 caching file sra.recount_project.SRP115956.MD.gz. ## 2021-03-01 00:26:10 caching file sra.recount_qc.SRP115956.MD.gz. ## 2021-03-01 00:26:11 caching file sra.recount_seq_qc.SRP115956.MD.gz. ## 2021-03-01 00:26:13 caching file sra.recount_pred.SRP115956.MD.gz. ## 2021-03-01 00:26:15 downloading and reading the feature information. ## 2021-03-01 00:26:16 caching file human.gene_sums.G026.gtf.gz. ## 2021-03-01 00:26:17 downloading and reading the counts: 263 samples across 63856 features. ## 2021-03-01 00:26:19 caching file sra.gene_sums.SRP115956.G026.gz. ## 2021-03-01 00:26:25 construcing the RangedSummarizedExperiment (rse) object. # Explorar el objeto RSE rse_gene ## class: RangedSummarizedExperiment ## dim: 63856 263 ## metadata(8): time_created recount3_version ... annotation recount3_url ## assays(1): raw_counts ## rownames(63856): ENSG00000278704.1 ENSG00000277400.1 ... ## ENSG00000182484.15_PAR_Y ENSG00000227159.8_PAR_Y ## rowData names(10): source type ... havana_gene tag ## colnames(263): SRR5961814 SRR5961815 ... SRR5961998 SRR5961999 ## colData names(175): rail_id external_id ... ## recount_pred.curated.cell_line BigWigURL # Guardar el objeto RSE original rse_gene_original &lt;- rse_gene # Usar para restablecer el objeto RSE a su forma original #rse_gene &lt;- rse_gene_original En resumen, los datos transcriptómicos estan representados por 63,856 genes de 263 muestras. Ahora, es necesario obtener el número de lecturas para cada una de las muestras, en lugar de los datos a nivel de nucleótidos. Además, con el siguiente código podemos explorar la información contenida en las categorias, que representan variables del experimento. # Obtener los numeros de lecturas assay(rse_gene, &quot;counts&quot;) &lt;- compute_read_counts(rse_gene) # Facilitar el uso de la informacion del experimento rse_gene &lt;- expand_sra_attributes(rse_gene) # Explorar los parametros del experimento y algunas de sus variables colData(rse_gene)[, grepl(&quot;^sra_attribute&quot;, colnames(colData(rse_gene)))] ## DataFrame with 263 rows and 15 columns ## sra_attribute.age sra_attribute.alcool sra_attribute.Cause_of_death ## &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR5961814 44 NA Suicide ## SRR5961815 29 no Suicide ## SRR5961816 68 yes Suicide ## SRR5961817 39 no Suicide ## SRR5961818 40 NA Suicide ## ... ... ... ... ## SRR5961995 53 no Suicide ## SRR5961996 39 no Suicide ## SRR5961997 55 yes Accident ## SRR5961998 38 NA Suicide ## SRR5961999 25 NA Suicide ## sra_attribute.drug_type sra_attribute.drugs sra_attribute.gender ## &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR5961814 NA NA female ## SRR5961815 no no male ## SRR5961816 no no male ## SRR5961817 no no male ## SRR5961818 NA NA female ## ... ... ... ... ## SRR5961995 no no male ## SRR5961996 no no male ## SRR5961997 no no male ## SRR5961998 NA NA male ## SRR5961999 NA NA female ## sra_attribute.medication_type sra_attribute.medication ## &lt;character&gt; &lt;character&gt; ## SRR5961814 AD yes ## SRR5961815 no no ## SRR5961816 NA NA ## SRR5961817 AD yes ## SRR5961818 AD yes ## ... ... ... ## SRR5961995 NA NA ## SRR5961996 AD yes ## SRR5961997 no no ## SRR5961998 NA NA ## SRR5961999 NA NA ## sra_attribute.ph sra_attribute.phenotype sra_attribute.pmi ## &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR5961814 6.73 CTRL 29.5 ## SRR5961815 6.96 MDD 27 ## SRR5961816 6.93 MDD 32 ## SRR5961817 6.37 MDD 18.5 ## SRR5961818 6.81 MDD 49.5 ## ... ... ... ... ## SRR5961995 6.91 MDD 33.5 ## SRR5961996 6 MDD 19 ## SRR5961997 6.75 CTRL 24 ## SRR5961998 6.86 MDD 30 ## SRR5961999 6.73 MDD 20 ## sra_attribute.rin sra_attribute.smoking sra_attribute.source_name ## &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR5961814 7.3 NA postmortem brain ## SRR5961815 5.7 yes (heavy) postmortem brain ## SRR5961816 8.8 yes (heavy) postmortem brain ## SRR5961817 6.8 no postmortem brain ## SRR5961818 7.8 NA postmortem brain ## ... ... ... ... ## SRR5961995 7.7 NA postmortem brain ## SRR5961996 4.9 yes (heavy) postmortem brain ## SRR5961997 4.4 NA postmortem brain ## SRR5961998 7.7 NA postmortem brain ## SRR5961999 8.1 NA postmortem brain ## sra_attribute.tissue ## &lt;character&gt; ## SRR5961814 Orbitofrontal (OFC; .. ## SRR5961815 Orbitofrontal (OFC; .. ## SRR5961816 Orbitofrontal (OFC; .. ## SRR5961817 Orbitofrontal (OFC; .. ## SRR5961818 Orbitofrontal (OFC; .. ## ... ... ## SRR5961995 Nucleus Accumbens (N.. ## SRR5961996 Nucleus Accumbens (N.. ## SRR5961997 Nucleus Accumbens (N.. ## SRR5961998 Nucleus Accumbens (N.. ## SRR5961999 Nucleus Accumbens (N.. De estas categorias, elegí como variable categórica el fenotipo, el cual se refiere a si el individuo presentaba el MDD o no. Además, me pareció interesante analizar el género de los individuos, ya que precisamente el estudio encontró, en esta categoría, diferencias significativas. Por último, la variable que tambien me llamó la atención es la causa de muerte, ya que algunos de los individuos se suicidaron, y esto podría tener una fuerte relación con el transtorno. Los datos de estas variables, junto con el de las variables numéricas de edad del individuo y el número de integridad del RNA (RIN por sus siglas en inglés), deben ser corregidas como se muestra en el siguiente código. A continuación, presento el resumen de algunas de las variables, incluyendo las de mi interés. # Pasar de character a nuemric o factor rse_gene$sra_attribute.phenotype &lt;- factor(rse_gene$sra_attribute.phenotype) rse_gene$sra_attribute.gender &lt;- factor(rse_gene$sra_attribute.gender) rse_gene$sra_attribute.age &lt;- as.numeric(rse_gene$sra_attribute.age) rse_gene$sra_attribute.rin &lt;- as.numeric(rse_gene$sra_attribute.rin) # Resumen de las variables de interes summary(as.data.frame(colData(rse_gene)[, grepl(&quot;^sra_attribute.[phenotype|gender|age|rin]&quot;, colnames(colData(rse_gene)))])) ## sra_attribute.age sra_attribute.alcool sra_attribute.drug_type ## Min. :19.00 Length:263 Length:263 ## 1st Qu.:38.00 Class :character Class :character ## Median :46.00 Mode :character Mode :character ## Mean :46.63 ## 3rd Qu.:55.00 ## Max. :82.00 ## sra_attribute.drugs sra_attribute.gender sra_attribute.ph ## Length:263 female:122 Length:263 ## Class :character male :141 Class :character ## Mode :character Mode :character ## ## ## ## sra_attribute.phenotype sra_attribute.pmi sra_attribute.rin ## CTRL:122 Length:263 Min. :4.300 ## MDD :141 Class :character 1st Qu.:6.400 ## Mode :character Median :7.300 ## Mean :7.108 ## 3rd Qu.:7.700 ## Max. :9.400 ## sra_attribute.tissue ## Length:263 ## Class :character ## Mode :character ## ## ## La categoría de causa de muerte no es categórica, ya que hay múltiples opciones en ella. Por lo tanto, las voy a asignar como suicidio o no suicidio. Esta clasificación si es apropiada, ya que solo hay dos opciones. # Encontraremos diferencias entre muestra prenatalas vs postnatales rse_gene$death &lt;- factor(ifelse(rse_gene$sra_attribute.Cause_of_death == &quot;Suicide&quot;, &quot;suicide&quot;, &quot;no suicide&quot;)) table(rse_gene$death) ## ## no suicide suicide ## 60 203 Con base en las variables de control de calidad se divide el número de lecturas asignadas a los genes entre el número de lecturas totales, lo cual resulta en la proporción de lecturas asignadas a los genes y facilita la identificación de muestras malas. # Ver el resumen de los niveles de expresion rse_gene$assigned_gene_prop &lt;- rse_gene$recount_qc.gene_fc_count_all.assigned / rse_gene$recount_qc.gene_fc_count_all.total summary(rse_gene$assigned_gene_prop) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.2915 0.3704 0.3985 0.4060 0.4329 0.5841 Una forma útil para interpretarlo es mediante una gráfica RIN como la siguiente. En ella se puede observar que algunas muestras no son lo suficientemente buenas, por lo que se deberá considerar para la limpieza de datos. # Graficar los niveles de expresion RIN with(colData(rse_gene), plot(assigned_gene_prop, sra_attribute.rin)) abline(v=0.37,col = &quot;red&quot;) Por último, analicé como varían los resultados entre los dos fenotipos usando el siguiente código. Al parecer no hay mucha diferencia entre ambas condiciones. # Checar si hay una diferencia entre los grupos with(colData(rse_gene), tapply(assigned_gene_prop, sra_attribute.phenotype, summary)) ## $CTRL ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.3127 0.3666 0.3965 0.4032 0.4399 0.5820 ## ## $MDD ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.2915 0.3755 0.4005 0.4083 0.4236 0.5841 "],["limpieza-de-datos.html", "Chapter 5 Limpieza de datos", " Chapter 5 Limpieza de datos A continuación, voy a hacer la limpieza de las muestras poco informativas. Observa en la siguiente gráfica la distribución de las muestras. # Guardar nuestro objeto RSE por si luego cambio de opinión rse_gene_unfiltered &lt;- rse_gene # Restablecer el objeto RSE a una instancia antes del filtrado #rse_gene &lt;- rse_gene_unfiltered # Graficar la distribucion de las muestras hist(rse_gene$assigned_gene_prop) abline(v=0.37,col = &quot;red&quot;) Se descartan las uestras que estan por debajo de un umbral de 0.37, el cual representa el primer cuartil. La distribución resultante es la siguiente. # Eliminar las muestras de menor calidad rse_gene &lt;- rse_gene[, rse_gene$assigned_gene_prop &gt; 0.37] hist(rse_gene$assigned_gene_prop) Es momento de hacer limpieza de genes poco informativos. Las estadísticas de todos los genes son las siguientes. # Obtener estadísticas de la expresión de genes gene_means &lt;- rowMeans(assay(rse_gene, &quot;counts&quot;)) summary(gene_means) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.0 0.2 3.5 403.3 74.5 888097.9 Se eliminará de nuevo el primer cuartil. Por último, se índica el porcentaje de muestras conservadas depués del filtrado. En este caso, me quede con aproximadamente el 73.4% de los datos originales. De nuevo muestro la gráfica RIN, pero esta vez con los datos filtrados. Al parecer, la calidad de los datos mejoró considerablemente después de la limpieza. # Filtrar genes rse_gene &lt;- rse_gene[gene_means &gt; 0.2, ] round(nrow(rse_gene) / nrow(rse_gene_unfiltered) * 100, 2) ## [1] 73.39 # Graficar los niveles de expresion RIN with(colData(rse_gene), plot(assigned_gene_prop, sra_attribute.rin)) "],["normalización-de-datos.html", "Chapter 6 Normalización de datos", " Chapter 6 Normalización de datos Es necesario normalizar los datos asumiendo que la mayoria de los genes no se estan expresando diferencialmente. El objetivo es redudir la incidencia de falsos positivos. # Construyo un objeto con el cual se podran normalizar los datos library(&quot;edgeR&quot;) ## Loading required package: limma ## ## Attaching package: &#39;limma&#39; ## The following object is masked from &#39;package:BiocGenerics&#39;: ## ## plotMA dge &lt;- DGEList( counts = assay(rse_gene, &quot;counts&quot;), genes = rowData(rse_gene)) dge &lt;- calcNormFactors(dge) "],["expresión-diferencial.html", "Chapter 7 Expresión diferencial", " Chapter 7 Expresión diferencial A continuación, se realizó un análisis mediante gráficas de tipo boxplot, el cual es útil para visualizar la diferencia entre la expresión de las muestras bajo distintas condiciones. Analicé la diferencia de expresión entre las muestras que tenían MDD y las que no; las muestras de mujeres y las de hombres; y entre individuos que se suicidaron y los que murieron de otras formas. Existe poca diferencia entre la expresión diferencial de cada uno de los casos, por lo que un análisis más exhaustivo es necesario. # Importa una libreria para generar boxplot library(&quot;ggplot2&quot;) # Grafica la expresion diferencial entre las condiciones MDD y no MDD ggplot(as.data.frame(colData(rse_gene)), aes(y = assigned_gene_prop, x = sra_attribute.phenotype)) + geom_boxplot() + theme_bw(base_size = 20) + ylab(&quot;Assigned Gene Prop&quot;) + xlab(&quot;Phenotype&quot;) # Grafica la expresion diferencial entre las condiciones hombre y mujer ggplot(as.data.frame(colData(rse_gene)), aes(y = assigned_gene_prop, x = sra_attribute.gender)) + geom_boxplot() + theme_bw(base_size = 20) + ylab(&quot;Assigned Gene Prop&quot;) + xlab(&quot;Gender&quot;) # Grafica la expresion diferencial entre las condiciones suicida y no suicida ggplot(as.data.frame(colData(rse_gene)), aes(y = assigned_gene_prop, x = death)) + geom_boxplot() + theme_bw(base_size = 20) + ylab(&quot;Assigned Gene Prop&quot;) + xlab(&quot;Cause of death&quot;) Generé el modelo estadistico de acuerdo a las variables previamente mencionadas. Además, señalo a cuál instancia de las variables apuntan cada análisis. Estas instancias son MDD, hombre y suicida, respectivamente. # Generar el modelo linear estadistico mod &lt;- model.matrix(~ sra_attribute.phenotype + sra_attribute.gender + death + assigned_gene_prop, data = colData(rse_gene)) # Observar las variables que componen el modelo colnames(mod) ## [1] &quot;(Intercept)&quot; &quot;sra_attribute.phenotypeMDD&quot; ## [3] &quot;sra_attribute.gendermale&quot; &quot;deathsuicide&quot; ## [5] &quot;assigned_gene_prop&quot; Usando un modelo de regresión lineal, es posible obtener estimados de la desviación estandar. La siguiente gráfica sintetiza las desviaciones estándar y valor de expresión logarítmica para cada gen. La forma que toma la curva roja indica que los datos son lo suficientemente robustos como para avanzar en el análisis. # Generar la grafica para visualizar la desviacion estandar library(&quot;limma&quot;) vGene &lt;- voom(dge, mod, plot = TRUE) Ahora, genero el modelo de la regresión lineal y muestro la cantidad de genes que poseen una expresión diferencial significativa. El resultado son 28 de 63,828 genes. # Generar el modelo de regresion lineal eb_results &lt;- eBayes(lmFit(vGene)) # Indicar el coeficiente del modelo, que en este caso es la variable de interes de_results &lt;- topTable( eb_results, coef = 2, number = nrow(rse_gene), sort.by = &quot;none&quot; ) # Mostrar los genes diferencialmente expresados entre control y MDD con FDR &lt; 5% table(de_results$adj.P.Val &lt; 0.05) ## ## FALSE TRUE ## 46827 38 Ahora, utilizo una gráfica con la cual puedo visualizar el cambio en los niveles de expresión entre las muestras MDD y no MDD. Los valores positivos indican que la expresión es mas alta en el caso MDD y los valores negativos indican que es más alto en el caso no MDD. # Visualizar los resultados estadísticos plotMA(eb_results, coef = 2) Mediante el uso de una gráfica de tipo volcano, se indican los genes con mayor expresión diferencial y con mejor valor de p-value. volcanoplot(eb_results, coef = 2, highlight = 5, names = de_results$gene_name) A continuación, se muestra la información de los genes con mayor expresión diferencial. Es importante remarcar que hay dos genes llamados TRPM1, pero el significativo solo es uno. # Mostrar la informacion de los genes de_results[de_results$gene_name %in% c(&quot;PAX8-AS1&quot;, &quot;TRPM1&quot;, &quot;FAM182A&quot;, &quot;PAX8&quot;, &quot;NKAPP1&quot;), ] ## source type score phase gene_id ## ENSG00000134160.13 HAVANA gene 7454 NA ENSG00000134160.13 ## ENSG00000189223.14 HAVANA gene 17274 NA ENSG00000189223.14 ## ENSG00000125618.16 HAVANA gene 7400 NA ENSG00000125618.16 ## ENSG00000125804.13 HAVANA gene 5787 NA ENSG00000125804.13 ## ENSG00000233382.6 HAVANA gene 3222 NA ENSG00000233382.6 ## gene_type gene_name level ## ENSG00000134160.13 protein_coding TRPM1 1 ## ENSG00000189223.14 processed_transcript PAX8-AS1 1 ## ENSG00000125618.16 protein_coding PAX8 1 ## ENSG00000125804.13 processed_transcript FAM182A 2 ## ENSG00000233382.6 transcribed_processed_pseudogene NKAPP1 2 ## havana_gene tag logFC AveExpr ## ENSG00000134160.13 OTTHUMG00000129267.5 ncRNA_host 1.8618999 -1.7911180 ## ENSG00000189223.14 OTTHUMG00000153340.8 overlapping_locus 1.5808862 2.9641547 ## ENSG00000125618.16 OTTHUMG00000128529.11 &lt;NA&gt; 1.4852405 -0.3744210 ## ENSG00000125804.13 OTTHUMG00000032144.2 &lt;NA&gt; 0.7455656 0.2053713 ## ENSG00000233382.6 OTTHUMG00000022295.5 overlapping_locus 0.3678170 4.5605076 ## t P.Value adj.P.Val B ## ENSG00000134160.13 5.821262 2.323090e-08 0.0004207514 6.828719 ## ENSG00000189223.14 5.869610 1.813457e-08 0.0004207514 9.003623 ## ENSG00000125618.16 5.225435 4.386866e-07 0.0045123406 5.387529 ## ENSG00000125804.13 5.792264 2.693384e-08 0.0004207514 8.186189 ## ENSG00000233382.6 5.121715 7.154427e-07 0.0045123406 5.639558 En la siguiente gráfica de tipo heatmap se observa la expresión de los genes dependiendo de todas las condiciones que se analizaron en el modelo. La información solo se extrajo de los primeros 25 genes mas significativos. # Extraer valores de los genes de interes exprs_heatmap &lt;- vGene$E[rank(de_results$adj.P.Val) &lt;= 25, ] # Crear una tabla con informacion de las muestras y con nombres de columnas mas amigables df &lt;- as.data.frame(colData(rse_gene)[, c(&quot;sra_attribute.gender&quot;, &quot;death&quot;, &quot;sra_attribute.phenotype&quot;)]) colnames(df) &lt;- c(&quot;Gender&quot;, &quot;Cause of death&quot;, &quot;Phenotype&quot;) # Indicar el nombre de cada uno de los genes rownames(exprs_heatmap) &lt;- rowRanges(rse_gene)$gene_name[match(rownames(exprs_heatmap), rownames(rse_gene))] # Importar la libreria requerida para graficar el heatmap library(&quot;pheatmap&quot;) # Crear el heatmap pheatmap( exprs_heatmap, cluster_rows = TRUE, cluster_cols = TRUE, show_rownames = TRUE, show_colnames = FALSE, annotation_col = df, fontsize_row = 6, ) Por último, grafique la expresión diferencial dependiendo de la categoria a la que pertenecen las muestras. En el caso entre mujeres y hombres existe una gran diferencia de genes diferencialmente expresados, como lo indicaban en el estudio. Esto se interpreta gracias a la formación de clusters correspondientes a cada instancia de las variables en la siguiente gráfica. # Importar una libreria requerida para asignar colores library(&quot;RColorBrewer&quot;) # Convertir los valores de genero a colores col.gender &lt;- df$Gender levels(col.gender) &lt;- brewer.pal(nlevels(col.gender), &quot;Set1&quot;) ## Warning in brewer.pal(nlevels(col.gender), &quot;Set1&quot;): minimal value for n is 3, returning requested palette with 3 different levels col.gender &lt;- as.character(col.gender) ## MDS por genero plotMDS(vGene$E, labels = df$Gender, col = col.gender) Sin embargo, encontre un panorama mucho menos informativo al analizar en el caso entre individuos con y sin MDD, y entre individuos que fueron suicidas y los que no. Se interpreta que no hay muchos genes diferencialmente expresados ya que no se forman clusters correspondientes a cada instancia de la variable. Esto se observa en las siguientes dos gráficas. ## Convertir los valores de MDD a colores col.phenotype &lt;- df$Phenotype levels(col.phenotype) &lt;- brewer.pal(nlevels(col.phenotype), &quot;Dark2&quot;) ## Warning in brewer.pal(nlevels(col.phenotype), &quot;Dark2&quot;): minimal value for n is 3, returning requested palette with 3 different levels col.phenotype &lt;- as.character(col.phenotype) ## MDS por MDD plotMDS(vGene$E, labels = df$Phenotype, col = col.phenotype) ## Conviertiendo los valores de Sex a colores col.death &lt;- df$`Cause of death` levels(col.death) &lt;- brewer.pal(nlevels(col.death), &quot;Set2&quot;) ## Warning in brewer.pal(nlevels(col.death), &quot;Set2&quot;): minimal value for n is 3, returning requested palette with 3 different levels col.death &lt;- as.character(col.death) ## MDS por sexo plotMDS(vGene$E, labels = df$`Cause of death`, col = col.death) "],["conclusiones.html", "Chapter 8 Conclusiones", " Chapter 8 Conclusiones Al igual que el estudio donde se obtuvieron los datos con los que trabaje, encontre una gran divergencia, entre hombres y mujeres, en la caracterización molecular de las firmas transcripcionales; esto ocurre a pesar de que los hombres y las mujeres con MDD exhiben una sintomatología similar y a la vez diferente. Los hallazgos de los investigadores sugieren que el MDD en hombres y mujeres puede surgir en parte debido a las acciones de módulos genéticos similares, que comparten especificidad celular y biológica, pero que se organizan y expresan de manera diferente a través de las regiones del cerebro en los dos sexos. Las alteraciones en esta estructura transcripcional precisa pueden interferir con la actividad coordinada de varias regiones del cerebro en hombres y mujeres y, en consecuencia, alterar las estrategias normalmente utilizadas para hacer frente al estrés. Sin embargo, yo encontre genes distintos a los que los investigadores señalaron como relevantes, los cuales fueron DUSP6 y EMX1. En su lugar yo encontre que los genes PAX8-AS1, TRPM1, FAM182A, PAX8 y NKAPP1 poseen niveles de expresión diferencial significativos. La razón de esta aparente discordancia, podría deberse al uso de las cuentas en lugar de usar RPKMs o CPMs. La heterogeneidad de los trastornos depresivos es uno de los principales impedimentos para comprenderlos mejor y desarrollar mejores tratamientos. Los resultados del estudio original destacan posibles nuevas vías para desarrollar estrategias terapéuticas más específicas para el tratamiento del MDD en hombres y mujeres. Además, el análisis de más variables podría ayudar a esclarecer la penumbra que rodea a este transtorno. Entre estas variables yo incluí el suicidio, y aunque no mostró ser significativo, hay muchas más opciones; como por ejemplo, el consumo de drogas, alcohol y tabaco, la medicación y la edad, entr otras. "],["referencias.html", "Chapter 9 Referencias", " Chapter 9 Referencias Labonté, B., Engmann, O., Purushothaman, I., Menard, C., Wang, J., Tan, C., Scarpa, J. R., Moy, G., Loh, Y.-H. E., Cahill, M., Lorsch, Z. S., Hamilton, P. J., Calipari, E. S., Hodes, G. E., Issler, O., Kronman, H., Pfau, M., Obradovic, A. L. J., Dong, Y., … Nestler, E. J. (2017). Sex-specific transcriptional signatures in human depression. Nature Medicine, 23(9), 1102-1111. Collado-Torres L (2021). Explore and download data from the recount3 project. doi: 10.18129/B9.bioc.recount3 Robinson MD, McCarthy DJ and Smyth GK (2010). edgeR: a Bioconductor package for differential expression analysis of digital gene expression data. Bioinformatics 26, 139-140 H. Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2016. Ritchie ME, Phipson B, Wu D, Hu Y, Law CW, Shi W, Smyth GK (2015). “limma powers differential expression analyses for RNA-sequencing and microarray studies.” Nucleic Acids Research, 43(7), e47. doi: 10.1093/nar/gkv007. Raivo Kolde (2019). pheatmap: Pretty Heatmaps. R package version 1.0.12. Erich Neuwirth (2014). RColorBrewer: ColorBrewer Palettes. R package version 1.1-2. "]]
